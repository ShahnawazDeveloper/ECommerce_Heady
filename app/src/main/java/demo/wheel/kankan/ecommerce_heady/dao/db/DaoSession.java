package demo.wheel.kankan.ecommerce_heady.dao.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import demo.wheel.kankan.ecommerce_heady.dao.db.Category;
import demo.wheel.kankan.ecommerce_heady.dao.db.Product;
import demo.wheel.kankan.ecommerce_heady.dao.db.Variant;
import demo.wheel.kankan.ecommerce_heady.dao.db.Tax;

import demo.wheel.kankan.ecommerce_heady.dao.db.CategoryDao;
import demo.wheel.kankan.ecommerce_heady.dao.db.ProductDao;
import demo.wheel.kankan.ecommerce_heady.dao.db.VariantDao;
import demo.wheel.kankan.ecommerce_heady.dao.db.TaxDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig categoryDaoConfig;
    private final DaoConfig productDaoConfig;
    private final DaoConfig variantDaoConfig;
    private final DaoConfig taxDaoConfig;

    private final CategoryDao categoryDao;
    private final ProductDao productDao;
    private final VariantDao variantDao;
    private final TaxDao taxDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        categoryDaoConfig = daoConfigMap.get(CategoryDao.class).clone();
        categoryDaoConfig.initIdentityScope(type);

        productDaoConfig = daoConfigMap.get(ProductDao.class).clone();
        productDaoConfig.initIdentityScope(type);

        variantDaoConfig = daoConfigMap.get(VariantDao.class).clone();
        variantDaoConfig.initIdentityScope(type);

        taxDaoConfig = daoConfigMap.get(TaxDao.class).clone();
        taxDaoConfig.initIdentityScope(type);

        categoryDao = new CategoryDao(categoryDaoConfig, this);
        productDao = new ProductDao(productDaoConfig, this);
        variantDao = new VariantDao(variantDaoConfig, this);
        taxDao = new TaxDao(taxDaoConfig, this);

        registerDao(Category.class, categoryDao);
        registerDao(Product.class, productDao);
        registerDao(Variant.class, variantDao);
        registerDao(Tax.class, taxDao);
    }
    
    public void clear() {
        categoryDaoConfig.clearIdentityScope();
        productDaoConfig.clearIdentityScope();
        variantDaoConfig.clearIdentityScope();
        taxDaoConfig.clearIdentityScope();
    }

    public CategoryDao getCategoryDao() {
        return categoryDao;
    }

    public ProductDao getProductDao() {
        return productDao;
    }

    public VariantDao getVariantDao() {
        return variantDao;
    }

    public TaxDao getTaxDao() {
        return taxDao;
    }

}
